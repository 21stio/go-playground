// Code generated by protoc-gen-go. DO NOT EDIT.
// source: idkind/idkind_.proto

/*
Package idkind is a generated protocol buffer package.

It is generated from these files:
	idkind/idkind_.proto

It has these top-level messages:
*/
package idkind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IdKind int32

const (
	IdKind_ID_URL        IdKind = 0
	IdKind_ID_NAME       IdKind = 1
	IdKind_ID_USERNAME   IdKind = 2
	IdKind_ID_EAN        IdKind = 3
	IdKind_ID_SERVICE_ID IdKind = 4
	IdKind_ID_LOCAL      IdKind = 5
)

var IdKind_name = map[int32]string{
	0: "ID_URL",
	1: "ID_NAME",
	2: "ID_USERNAME",
	3: "ID_EAN",
	4: "ID_SERVICE_ID",
	5: "ID_LOCAL",
}
var IdKind_value = map[string]int32{
	"ID_URL":        0,
	"ID_NAME":       1,
	"ID_USERNAME":   2,
	"ID_EAN":        3,
	"ID_SERVICE_ID": 4,
	"ID_LOCAL":      5,
}

func (x IdKind) Enum() *IdKind {
	p := new(IdKind)
	*p = x
	return p
}
func (x IdKind) String() string {
	return proto.EnumName(IdKind_name, int32(x))
}
func (x *IdKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IdKind_value, data, "IdKind")
	if err != nil {
		return err
	}
	*x = IdKind(value)
	return nil
}
func (IdKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterEnum("idkind.IdKind", IdKind_name, IdKind_value)
}

func init() { proto.RegisterFile("idkind/idkind_.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0x4c, 0xc9, 0xce,
	0xcc, 0x4b, 0xd1, 0x87, 0x50, 0xf1, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0xae,
	0x56, 0x3c, 0x17, 0x9b, 0x67, 0x8a, 0x77, 0x66, 0x5e, 0x8a, 0x10, 0x17, 0x17, 0x9b, 0xa7, 0x4b,
	0x7c, 0x68, 0x90, 0x8f, 0x00, 0x83, 0x10, 0x37, 0x17, 0xbb, 0xa7, 0x4b, 0xbc, 0x9f, 0xa3, 0xaf,
	0xab, 0x00, 0xa3, 0x10, 0x3f, 0x17, 0x37, 0x48, 0x22, 0xd8, 0x35, 0x08, 0x2c, 0xc0, 0x04, 0x55,
	0xe9, 0xea, 0xe8, 0x27, 0xc0, 0x2c, 0x24, 0xc8, 0xc5, 0xeb, 0xe9, 0x12, 0x1f, 0xec, 0x1a, 0x14,
	0xe6, 0xe9, 0xec, 0x1a, 0xef, 0xe9, 0x22, 0xc0, 0x22, 0xc4, 0xc3, 0xc5, 0xe1, 0xe9, 0x12, 0xef,
	0xe3, 0xef, 0xec, 0xe8, 0x23, 0xc0, 0xea, 0x64, 0x12, 0x65, 0x94, 0x9e, 0x59, 0x92, 0x51, 0x9a,
	0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x6f, 0x64, 0x58, 0x5c, 0x92, 0x99, 0xaf, 0x9f, 0x9e, 0xaf, 0x5b,
	0x90, 0x93, 0x58, 0x99, 0x5e, 0x94, 0x5f, 0x9a, 0x97, 0xa2, 0x9f, 0x5e, 0x54, 0x90, 0xac, 0x5f,
	0x9c, 0x9c, 0x91, 0x9a, 0x9b, 0x08, 0x75, 0x25, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x79, 0x61,
	0x85, 0xb5, 0x00, 0x00, 0x00,
}
