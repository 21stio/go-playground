// Code generated by protoc-gen-go. DO NOT EDIT.
// source: whateverselect/whateverselect_.proto

/*
Package whateverselect is a generated protocol buffer package.

It is generated from these files:
	whateverselect/whateverselect_.proto

It has these top-level messages:
	WhateversSelect
	WhateverSelect
*/
package whateverselect

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import whateverfilter "github.com/21stio/go-playground/grpc/schema/whateverfilter"
import whateversort "github.com/21stio/go-playground/grpc/schema/whateversort"
import page "github.com/21stio/go-playground/grpc/schema/page"
import whateverunionselect "github.com/21stio/go-playground/grpc/schema/whateverunionselect"
import whateverunionsselect "github.com/21stio/go-playground/grpc/schema/whateverunionsselect"
import idsselect "github.com/21stio/go-playground/grpc/schema/idsselect"
import serviceselect "github.com/21stio/go-playground/grpc/schema/serviceselect"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WhateversSelect struct {
	Filter           *whateverfilter.WhateverFilter             `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	Sort             *whateversort.WhateverSort                 `protobuf:"bytes,2,opt,name=sort" json:"sort,omitempty"`
	Page             *page.Page                                 `protobuf:"bytes,3,opt,name=page" json:"page,omitempty"`
	SelectAll        *bool                                      `protobuf:"varint,4,opt,name=selectAll" json:"selectAll,omitempty"`
	EnumField        *bool                                      `protobuf:"varint,5,opt,name=enumField" json:"enumField,omitempty"`
	StringField      *bool                                      `protobuf:"varint,6,opt,name=stringField" json:"stringField,omitempty"`
	IntField         *bool                                      `protobuf:"varint,7,opt,name=intField" json:"intField,omitempty"`
	FloatField       *bool                                      `protobuf:"varint,8,opt,name=floatField" json:"floatField,omitempty"`
	BoolField        *bool                                      `protobuf:"varint,9,opt,name=boolField" json:"boolField,omitempty"`
	ObjectField      *WhateverSelect                            `protobuf:"bytes,10,opt,name=objectField" json:"objectField,omitempty"`
	UnionField       *whateverunionselect.WhateverUnionSelect   `protobuf:"bytes,11,opt,name=unionField" json:"unionField,omitempty"`
	EnumList         *bool                                      `protobuf:"varint,12,opt,name=enumList" json:"enumList,omitempty"`
	StringList       *bool                                      `protobuf:"varint,13,opt,name=stringList" json:"stringList,omitempty"`
	IntList          *bool                                      `protobuf:"varint,14,opt,name=intList" json:"intList,omitempty"`
	FloatList        *bool                                      `protobuf:"varint,15,opt,name=floatList" json:"floatList,omitempty"`
	BoolList         *bool                                      `protobuf:"varint,16,opt,name=boolList" json:"boolList,omitempty"`
	ObjectList       *WhateversSelect                           `protobuf:"bytes,17,opt,name=objectList" json:"objectList,omitempty"`
	UnionList        *whateverunionsselect.WhateverUnionsSelect `protobuf:"bytes,18,opt,name=unionList" json:"unionList,omitempty"`
	SelectHash       *bool                                      `protobuf:"varint,19,opt,name=selectHash" json:"selectHash,omitempty"`
	Ids              *idsselect.IdsSelect                       `protobuf:"bytes,20,opt,name=ids" json:"ids,omitempty"`
	Meta             *serviceselect.TypeMetaSelect              `protobuf:"bytes,21,opt,name=meta" json:"meta,omitempty"`
	Hash             *string                                    `protobuf:"bytes,22,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *WhateversSelect) Reset()                    { *m = WhateversSelect{} }
func (m *WhateversSelect) String() string            { return proto.CompactTextString(m) }
func (*WhateversSelect) ProtoMessage()               {}
func (*WhateversSelect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WhateversSelect) GetFilter() *whateverfilter.WhateverFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *WhateversSelect) GetSort() *whateversort.WhateverSort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *WhateversSelect) GetPage() *page.Page {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *WhateversSelect) GetSelectAll() bool {
	if m != nil && m.SelectAll != nil {
		return *m.SelectAll
	}
	return false
}

func (m *WhateversSelect) GetEnumField() bool {
	if m != nil && m.EnumField != nil {
		return *m.EnumField
	}
	return false
}

func (m *WhateversSelect) GetStringField() bool {
	if m != nil && m.StringField != nil {
		return *m.StringField
	}
	return false
}

func (m *WhateversSelect) GetIntField() bool {
	if m != nil && m.IntField != nil {
		return *m.IntField
	}
	return false
}

func (m *WhateversSelect) GetFloatField() bool {
	if m != nil && m.FloatField != nil {
		return *m.FloatField
	}
	return false
}

func (m *WhateversSelect) GetBoolField() bool {
	if m != nil && m.BoolField != nil {
		return *m.BoolField
	}
	return false
}

func (m *WhateversSelect) GetObjectField() *WhateverSelect {
	if m != nil {
		return m.ObjectField
	}
	return nil
}

func (m *WhateversSelect) GetUnionField() *whateverunionselect.WhateverUnionSelect {
	if m != nil {
		return m.UnionField
	}
	return nil
}

func (m *WhateversSelect) GetEnumList() bool {
	if m != nil && m.EnumList != nil {
		return *m.EnumList
	}
	return false
}

func (m *WhateversSelect) GetStringList() bool {
	if m != nil && m.StringList != nil {
		return *m.StringList
	}
	return false
}

func (m *WhateversSelect) GetIntList() bool {
	if m != nil && m.IntList != nil {
		return *m.IntList
	}
	return false
}

func (m *WhateversSelect) GetFloatList() bool {
	if m != nil && m.FloatList != nil {
		return *m.FloatList
	}
	return false
}

func (m *WhateversSelect) GetBoolList() bool {
	if m != nil && m.BoolList != nil {
		return *m.BoolList
	}
	return false
}

func (m *WhateversSelect) GetObjectList() *WhateversSelect {
	if m != nil {
		return m.ObjectList
	}
	return nil
}

func (m *WhateversSelect) GetUnionList() *whateverunionsselect.WhateverUnionsSelect {
	if m != nil {
		return m.UnionList
	}
	return nil
}

func (m *WhateversSelect) GetSelectHash() bool {
	if m != nil && m.SelectHash != nil {
		return *m.SelectHash
	}
	return false
}

func (m *WhateversSelect) GetIds() *idsselect.IdsSelect {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *WhateversSelect) GetMeta() *serviceselect.TypeMetaSelect {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *WhateversSelect) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type WhateverSelect struct {
	SelectAll        *bool                                      `protobuf:"varint,1,opt,name=selectAll" json:"selectAll,omitempty"`
	EnumField        *bool                                      `protobuf:"varint,2,opt,name=enumField" json:"enumField,omitempty"`
	StringField      *bool                                      `protobuf:"varint,3,opt,name=stringField" json:"stringField,omitempty"`
	IntField         *bool                                      `protobuf:"varint,4,opt,name=intField" json:"intField,omitempty"`
	FloatField       *bool                                      `protobuf:"varint,5,opt,name=floatField" json:"floatField,omitempty"`
	BoolField        *bool                                      `protobuf:"varint,6,opt,name=boolField" json:"boolField,omitempty"`
	ObjectField      *WhateverSelect                            `protobuf:"bytes,7,opt,name=objectField" json:"objectField,omitempty"`
	UnionField       *whateverunionselect.WhateverUnionSelect   `protobuf:"bytes,8,opt,name=unionField" json:"unionField,omitempty"`
	EnumList         *bool                                      `protobuf:"varint,9,opt,name=enumList" json:"enumList,omitempty"`
	StringList       *bool                                      `protobuf:"varint,10,opt,name=stringList" json:"stringList,omitempty"`
	IntList          *bool                                      `protobuf:"varint,11,opt,name=intList" json:"intList,omitempty"`
	FloatList        *bool                                      `protobuf:"varint,12,opt,name=floatList" json:"floatList,omitempty"`
	BoolList         *bool                                      `protobuf:"varint,13,opt,name=boolList" json:"boolList,omitempty"`
	ObjectList       *WhateversSelect                           `protobuf:"bytes,14,opt,name=objectList" json:"objectList,omitempty"`
	UnionList        *whateverunionsselect.WhateverUnionsSelect `protobuf:"bytes,15,opt,name=unionList" json:"unionList,omitempty"`
	SelectHash       *bool                                      `protobuf:"varint,16,opt,name=selectHash" json:"selectHash,omitempty"`
	Ids              *idsselect.IdsSelect                       `protobuf:"bytes,17,opt,name=ids" json:"ids,omitempty"`
	Meta             *serviceselect.TypeMetaSelect              `protobuf:"bytes,18,opt,name=meta" json:"meta,omitempty"`
	Hash             *string                                    `protobuf:"bytes,19,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *WhateverSelect) Reset()                    { *m = WhateverSelect{} }
func (m *WhateverSelect) String() string            { return proto.CompactTextString(m) }
func (*WhateverSelect) ProtoMessage()               {}
func (*WhateverSelect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WhateverSelect) GetSelectAll() bool {
	if m != nil && m.SelectAll != nil {
		return *m.SelectAll
	}
	return false
}

func (m *WhateverSelect) GetEnumField() bool {
	if m != nil && m.EnumField != nil {
		return *m.EnumField
	}
	return false
}

func (m *WhateverSelect) GetStringField() bool {
	if m != nil && m.StringField != nil {
		return *m.StringField
	}
	return false
}

func (m *WhateverSelect) GetIntField() bool {
	if m != nil && m.IntField != nil {
		return *m.IntField
	}
	return false
}

func (m *WhateverSelect) GetFloatField() bool {
	if m != nil && m.FloatField != nil {
		return *m.FloatField
	}
	return false
}

func (m *WhateverSelect) GetBoolField() bool {
	if m != nil && m.BoolField != nil {
		return *m.BoolField
	}
	return false
}

func (m *WhateverSelect) GetObjectField() *WhateverSelect {
	if m != nil {
		return m.ObjectField
	}
	return nil
}

func (m *WhateverSelect) GetUnionField() *whateverunionselect.WhateverUnionSelect {
	if m != nil {
		return m.UnionField
	}
	return nil
}

func (m *WhateverSelect) GetEnumList() bool {
	if m != nil && m.EnumList != nil {
		return *m.EnumList
	}
	return false
}

func (m *WhateverSelect) GetStringList() bool {
	if m != nil && m.StringList != nil {
		return *m.StringList
	}
	return false
}

func (m *WhateverSelect) GetIntList() bool {
	if m != nil && m.IntList != nil {
		return *m.IntList
	}
	return false
}

func (m *WhateverSelect) GetFloatList() bool {
	if m != nil && m.FloatList != nil {
		return *m.FloatList
	}
	return false
}

func (m *WhateverSelect) GetBoolList() bool {
	if m != nil && m.BoolList != nil {
		return *m.BoolList
	}
	return false
}

func (m *WhateverSelect) GetObjectList() *WhateversSelect {
	if m != nil {
		return m.ObjectList
	}
	return nil
}

func (m *WhateverSelect) GetUnionList() *whateverunionsselect.WhateverUnionsSelect {
	if m != nil {
		return m.UnionList
	}
	return nil
}

func (m *WhateverSelect) GetSelectHash() bool {
	if m != nil && m.SelectHash != nil {
		return *m.SelectHash
	}
	return false
}

func (m *WhateverSelect) GetIds() *idsselect.IdsSelect {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *WhateverSelect) GetMeta() *serviceselect.TypeMetaSelect {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *WhateverSelect) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

func init() {
	proto.RegisterType((*WhateversSelect)(nil), "whateverselect.WhateversSelect")
	proto.RegisterType((*WhateverSelect)(nil), "whateverselect.WhateverSelect")
}

func init() { proto.RegisterFile("whateverselect/whateverselect_.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 622 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x5d, 0x6b, 0x13, 0x41,
	0x14, 0x25, 0xcd, 0xe6, 0xeb, 0xa6, 0x4d, 0xd2, 0x69, 0x95, 0x25, 0x68, 0x0c, 0x41, 0x24, 0x08,
	0xce, 0xda, 0x3e, 0xf8, 0x20, 0x82, 0x1f, 0x0f, 0x25, 0x82, 0x82, 0x6c, 0x15, 0xc1, 0x17, 0xd9,
	0x6c, 0xa6, 0x9b, 0x91, 0xcd, 0x4e, 0xd8, 0x9d, 0x54, 0xfa, 0x0b, 0xfc, 0xd7, 0x22, 0x73, 0x67,
	0x67, 0x3f, 0x42, 0xba, 0xb5, 0xb4, 0x2f, 0x65, 0xef, 0x39, 0xf7, 0xdc, 0xbb, 0xe7, 0x76, 0x0f,
	0x81, 0xa7, 0xbf, 0x97, 0x9e, 0x64, 0x97, 0x2c, 0x4e, 0x58, 0xc8, 0x7c, 0xe9, 0x94, 0xcb, 0x9f,
	0x74, 0x1d, 0x0b, 0x29, 0x48, 0xaf, 0x0c, 0x0f, 0x33, 0xd5, 0x05, 0x0f, 0x25, 0x8b, 0x9d, 0x72,
	0x99, 0xaa, 0x86, 0xe3, 0x4c, 0x25, 0xe2, 0xc2, 0x64, 0x11, 0x9b, 0xb9, 0xc3, 0xc1, 0xda, 0x0b,
	0x98, 0xa3, 0xfe, 0x18, 0x84, 0x9a, 0xb6, 0x4d, 0xc4, 0x45, 0xb4, 0xf5, 0x52, 0x05, 0xcc, 0xf4,
	0xbf, 0x2c, 0x73, 0x3b, 0x05, 0x65, 0xc5, 0x90, 0x2f, 0x4c, 0x5b, 0xf6, 0x64, 0xb8, 0x49, 0xc2,
	0xe2, 0x4b, 0xee, 0xb3, 0x94, 0x2f, 0x55, 0x69, 0xcf, 0xe4, 0x4f, 0x0b, 0xfa, 0xdf, 0x8d, 0x97,
	0x73, 0xa4, 0xc8, 0x2b, 0x68, 0x6a, 0xeb, 0x76, 0x6d, 0x5c, 0x9b, 0x76, 0x4f, 0x47, 0xb4, 0x7c,
	0x11, 0x6a, 0x04, 0x67, 0x58, 0xba, 0x69, 0x37, 0xa1, 0x60, 0xa9, 0x73, 0xd8, 0x7b, 0xa8, 0xca,
	0xcd, 0x2b, 0x30, 0xd3, 0x9c, 0x8b, 0x58, 0xba, 0xd8, 0x47, 0x46, 0x60, 0xa9, 0x63, 0xd9, 0x75,
	0xec, 0x07, 0xaa, 0x0a, 0xfa, 0xc5, 0x0b, 0x98, 0x8b, 0x38, 0x79, 0x04, 0x1d, 0xfd, 0xb2, 0xef,
	0xc3, 0xd0, 0xb6, 0xc6, 0xb5, 0x69, 0xdb, 0xcd, 0x01, 0xc5, 0xb2, 0x68, 0xb3, 0x3a, 0xe3, 0x2c,
	0x5c, 0xd8, 0x0d, 0xcd, 0x66, 0x00, 0x19, 0x43, 0x37, 0x91, 0x31, 0x8f, 0x02, 0xcd, 0x37, 0x91,
	0x2f, 0x42, 0x64, 0x08, 0x6d, 0x1e, 0x49, 0x4d, 0xb7, 0x90, 0xce, 0x6a, 0x32, 0x02, 0xb8, 0x08,
	0x85, 0x97, 0xb2, 0x6d, 0x64, 0x0b, 0x88, 0xda, 0x3d, 0x17, 0x22, 0xd4, 0x74, 0x47, 0xef, 0xce,
	0x00, 0xf2, 0x0e, 0xba, 0x62, 0xfe, 0x8b, 0xf9, 0xa9, 0x1c, 0xb6, 0x8e, 0xa8, 0x2d, 0xe4, 0x07,
	0xc1, 0xd2, 0x2d, 0x4a, 0xc8, 0x0c, 0x00, 0xff, 0xd9, 0x7a, 0x40, 0x17, 0x07, 0x4c, 0x77, 0x7d,
	0x4c, 0xd9, 0x94, 0x6f, 0x0a, 0x4b, 0x47, 0x15, 0xb4, 0xca, 0xa5, 0x3a, 0xca, 0x27, 0x9e, 0x48,
	0x7b, 0x5f, 0xbb, 0x34, 0xb5, 0x72, 0xa9, 0x0f, 0x82, 0xec, 0x81, 0x76, 0x99, 0x23, 0xc4, 0x86,
	0x16, 0x8f, 0x24, 0x92, 0x3d, 0x24, 0x4d, 0xa9, 0xfc, 0xe3, 0x35, 0x90, 0xeb, 0x6b, 0xff, 0x19,
	0xa0, 0x76, 0xaa, 0x63, 0x20, 0x39, 0xd0, 0x3b, 0x4d, 0x4d, 0xde, 0x02, 0x68, 0xa3, 0xc8, 0x1e,
	0xa2, 0xb3, 0x27, 0xd7, 0x9d, 0x26, 0x31, 0x86, 0x72, 0x09, 0x99, 0x41, 0x07, 0xed, 0xa1, 0x9e,
	0xa0, 0xfe, 0x39, 0xdd, 0x95, 0x90, 0xf2, 0x69, 0xcc, 0xa8, 0x5c, 0x8c, 0xf6, 0x11, 0x9c, 0x79,
	0xc9, 0xd2, 0x3e, 0x4a, 0xed, 0x67, 0x08, 0x79, 0x06, 0x75, 0xbe, 0x48, 0xec, 0x63, 0xdc, 0x71,
	0x4c, 0xb3, 0x78, 0xd1, 0x8f, 0x0b, 0x33, 0x4d, 0x35, 0x90, 0x13, 0xb0, 0x56, 0x4c, 0x7a, 0xf6,
	0x03, 0x6c, 0x7c, 0x4c, 0x4b, 0x39, 0xa3, 0x5f, 0xaf, 0xd6, 0xec, 0x33, 0x93, 0x5e, 0xaa, 0xc0,
	0x56, 0x42, 0xc0, 0x5a, 0xaa, 0xa5, 0x0f, 0xc7, 0xb5, 0x69, 0xc7, 0xc5, 0xe7, 0xc9, 0xdf, 0x06,
	0xf4, 0xca, 0xdf, 0x44, 0x39, 0x00, 0xb5, 0xca, 0x00, 0xec, 0xdd, 0x10, 0x80, 0x7a, 0x75, 0x00,
	0xac, 0xca, 0x00, 0x34, 0xaa, 0x03, 0xd0, 0xbc, 0x21, 0x00, 0xad, 0xbb, 0x06, 0xa0, 0x7d, 0x4f,
	0x01, 0xe8, 0x54, 0x06, 0x00, 0xaa, 0x02, 0xd0, 0xad, 0x08, 0xc0, 0x7e, 0x55, 0x00, 0x0e, 0x2a,
	0x03, 0xd0, 0xbb, 0x63, 0x00, 0xfa, 0xf7, 0x17, 0x80, 0xc1, 0x75, 0x01, 0x38, 0xfc, 0xdf, 0x00,
	0x90, 0xdb, 0x07, 0xe0, 0x28, 0x0f, 0xc0, 0x87, 0x37, 0x3f, 0x5e, 0x07, 0x5c, 0x2e, 0x37, 0x73,
	0xea, 0x8b, 0x95, 0x73, 0x7a, 0x92, 0x48, 0x2e, 0x9c, 0x40, 0xbc, 0x58, 0x87, 0xde, 0x55, 0x10,
	0x8b, 0x4d, 0xb4, 0x70, 0x82, 0x78, 0xed, 0x3b, 0x89, 0xbf, 0x64, 0x2b, 0x6f, 0xeb, 0xb7, 0xfd,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02, 0x0b, 0xab, 0xa1, 0xfb, 0x07, 0x00, 0x00,
}
