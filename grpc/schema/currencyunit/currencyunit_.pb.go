// Code generated by protoc-gen-go. DO NOT EDIT.
// source: currencyunit/currencyunit_.proto

/*
Package currencyunit is a generated protocol buffer package.

It is generated from these files:
	currencyunit/currencyunit_.proto

It has these top-level messages:
*/
package currencyunit

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CurrencyUnit int32

const (
	CurrencyUnit_EUR CurrencyUnit = 0
	CurrencyUnit_USD CurrencyUnit = 1
	CurrencyUnit_JPY CurrencyUnit = 2
	CurrencyUnit_GBP CurrencyUnit = 3
	CurrencyUnit_AUD CurrencyUnit = 4
	CurrencyUnit_CAD CurrencyUnit = 5
	CurrencyUnit_CHF CurrencyUnit = 6
	CurrencyUnit_CNY CurrencyUnit = 7
	CurrencyUnit_SEK CurrencyUnit = 8
	CurrencyUnit_NZD CurrencyUnit = 9
	CurrencyUnit_MXN CurrencyUnit = 10
	CurrencyUnit_SGD CurrencyUnit = 11
	CurrencyUnit_HKD CurrencyUnit = 12
	CurrencyUnit_NOK CurrencyUnit = 13
	CurrencyUnit_KRW CurrencyUnit = 14
	CurrencyUnit_TRY CurrencyUnit = 15
	CurrencyUnit_RUB CurrencyUnit = 16
	CurrencyUnit_INR CurrencyUnit = 17
	CurrencyUnit_BRL CurrencyUnit = 18
	CurrencyUnit_ZAR CurrencyUnit = 19
)

var CurrencyUnit_name = map[int32]string{
	0:  "EUR",
	1:  "USD",
	2:  "JPY",
	3:  "GBP",
	4:  "AUD",
	5:  "CAD",
	6:  "CHF",
	7:  "CNY",
	8:  "SEK",
	9:  "NZD",
	10: "MXN",
	11: "SGD",
	12: "HKD",
	13: "NOK",
	14: "KRW",
	15: "TRY",
	16: "RUB",
	17: "INR",
	18: "BRL",
	19: "ZAR",
}
var CurrencyUnit_value = map[string]int32{
	"EUR": 0,
	"USD": 1,
	"JPY": 2,
	"GBP": 3,
	"AUD": 4,
	"CAD": 5,
	"CHF": 6,
	"CNY": 7,
	"SEK": 8,
	"NZD": 9,
	"MXN": 10,
	"SGD": 11,
	"HKD": 12,
	"NOK": 13,
	"KRW": 14,
	"TRY": 15,
	"RUB": 16,
	"INR": 17,
	"BRL": 18,
	"ZAR": 19,
}

func (x CurrencyUnit) Enum() *CurrencyUnit {
	p := new(CurrencyUnit)
	*p = x
	return p
}
func (x CurrencyUnit) String() string {
	return proto.EnumName(CurrencyUnit_name, int32(x))
}
func (x *CurrencyUnit) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CurrencyUnit_value, data, "CurrencyUnit")
	if err != nil {
		return err
	}
	*x = CurrencyUnit(value)
	return nil
}
func (CurrencyUnit) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterEnum("currencyunit.CurrencyUnit", CurrencyUnit_name, CurrencyUnit_value)
}

func init() { proto.RegisterFile("currencyunit/currencyunit_.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x71, 0x4a, 0x81, 0x42, 0x08, 0xf0, 0x11, 0x5e, 0x80, 0x19, 0x89, 0x5a, 0x30, 0x21,
	0xb6, 0xa4, 0x2e, 0x2d, 0x04, 0x42, 0xe5, 0x62, 0x41, 0xb2, 0xa0, 0x62, 0xaa, 0x34, 0x12, 0xb5,
	0x23, 0xd7, 0x1e, 0xfa, 0x7a, 0x3c, 0x19, 0x3a, 0x8b, 0xa1, 0xdd, 0x7e, 0xf7, 0xbf, 0x9b, 0x2e,
	0xba, 0x54, 0xde, 0xda, 0xb9, 0x56, 0x6b, 0xaf, 0x1b, 0xc7, 0x36, 0x87, 0xcf, 0x7e, 0x6b, 0x8d,
	0x33, 0x49, 0xbc, 0x19, 0xaf, 0x7e, 0x3b, 0x51, 0x3c, 0xf8, 0x0f, 0x52, 0x37, 0x2e, 0xe9, 0x45,
	0xdd, 0xa1, 0x14, 0xd8, 0x21, 0xc8, 0x29, 0x47, 0x87, 0xf0, 0x34, 0x29, 0xb1, 0x4b, 0x18, 0x65,
	0x13, 0x74, 0x09, 0xa9, 0xe4, 0xd8, 0x23, 0x0c, 0x52, 0x8e, 0xfd, 0x80, 0xf1, 0x03, 0x0e, 0x02,
	0x8a, 0x12, 0x3d, 0xc2, 0x74, 0x98, 0xe3, 0x90, 0x50, 0x54, 0x1c, 0x47, 0x84, 0x97, 0x8f, 0x02,
	0x51, 0x58, 0x8d, 0x38, 0x8e, 0x09, 0xe3, 0x9c, 0x23, 0x0e, 0x37, 0xaf, 0x39, 0x4e, 0x08, 0xb9,
	0x78, 0xc7, 0x29, 0xe1, 0x4d, 0x94, 0x38, 0x23, 0x08, 0x99, 0x01, 0x84, 0xc7, 0x42, 0xe0, 0x9c,
	0x90, 0x89, 0x67, 0x24, 0x84, 0x2a, 0x15, 0xb8, 0xc8, 0xee, 0xab, 0xbb, 0xba, 0x71, 0x0b, 0xff,
	0xd5, 0x57, 0x66, 0xc9, 0x6e, 0x6f, 0x56, 0xae, 0x31, 0xac, 0x36, 0xd7, 0xed, 0xcf, 0x6c, 0x5d,
	0x5b, 0xe3, 0xf5, 0x37, 0xab, 0x6d, 0xab, 0xd8, 0x4a, 0x2d, 0xe6, 0xcb, 0xd9, 0xd6, 0x57, 0xfe,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xab, 0xb2, 0xd2, 0x31, 0x01, 0x00, 0x00,
}
